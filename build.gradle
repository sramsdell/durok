import java.nio.file.Files
import java.nio.file.Paths

// TODO get versions into properties file
plugins {
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '7.2.0'
    id 'java'
}

group = 'com.ramgames'

// TODO auto increment
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// TODO get versions into properties file
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.5.0'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'


    implementation 'org.hibernate.validator:hibernate-validator'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'javax.validation:validation-api:2.0.1.Final'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.0'
}

openApiGenerate {

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.5.0'
        implementation 'javax.servlet:javax.servlet-api:4.0.1'

        implementation 'org.hibernate.validator:hibernate-validator'

        implementation 'javax.annotation:javax.annotation-api:1.3.2'
        implementation 'javax.validation:validation-api:2.0.1.Final'
    }

    generatorName = 'spring'
    inputSpec = "$rootDir/src/main/resources/openapi.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = 'com.example.api'
    modelPackage = 'com.example.model'
    configOptions = [
            dateLibrary: 'java8',
            interfaceOnly: 'true'
    ]
}

tasks.register('generateApi', Task) {
        dependsOn 'openApiGenerate'
        doLast {
            sourceSets.main.java.srcDirs += file("$buildDir/generated/src/main/java")
            println(sourceSets.main.java.srcDirs)
        }
}

tasks.register('genVersionTxt', Task) {
    println(Task.toString())
    println("running genVersion")
    String containerDirName = "/app"
    String localDirName = projectDir.toString() + "/src/main/resources/"
    String fileName = "version.txt"
    java.nio.file.Path conPath = Paths.get(containerDirName)
    java.nio.file.Path localPath = Paths.get(localDirName)
    java.nio.file.Path conFilePath = Paths.get(containerDirName.toString() + "/" + fileName)
    java.nio.file.Path localFilePath = Paths.get(localDirName.toString() + "/" + fileName)
    // , LinkOption.NOFOLLOW_LINKS
    byte[] contents = """$version""".toCharArray();
    if (Files.exists(conPath) && Files.isDirectory(conPath)) {
        Files.write(conFilePath, contents)
    }

    if (Files.exists(localPath) && Files.isDirectory(localPath)) {
        if (Files.exists(localFilePath)) {
            Files.delete(localFilePath)
        }
        Files.write(localFilePath, contents)
    }
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava.dependsOn genVersionTxt
// compileJava.dependsOn generateApi